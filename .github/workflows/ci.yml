on:
  push:
    branches:
      - master
      - development

jobs:
  # TODO: Reuse pr.yml test runner setup
  # tests:
  #   name: Tests
  #   if: "!contains(github.event.head_commit.message, '__SEMANTIC RELEASE VERSION UPDATE__')"
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: true
  #   env:
  #     MODULE_ID: cbelasticsearch
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Setup Java JDK
  #       uses: actions/setup-java@v1.4.3
  #       with:
  #         java-version: 11 

  #     - name: Set Up CommandBox
  #       uses: elpete/setup-commandbox@v1.0.0
      
  #     - name: Install dependencies
  #       run: |
  #         box install
  #         box install ${{ matrix.coldbox }} --noSave
      
  #     - name: Start server
  #       run: box server start cfengine=${{ matrix.cfengine }} --noSaveSettings

  #     - name: Run TestBox Tests
  #       run: box testbox run

  release:
    name: Release
    # if: "!contains(github.event.head_commit.message, '__SEMANTIC RELEASE VERSION UPDATE__')"
    # needs: tests
    runs-on: ubuntu-latest
    env:
      GA_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11 

      - name: Set Up CommandBox
        uses: elpete/setup-commandbox@v1.0.0

      - name: Install Apache Ant
        run: |
          wget --no-check-certificate https://apache.claz.org//ant/binaries/apache-ant-1.10.9-bin.tar.gz
          tar -xzf apache-ant-1.10.9-bin.tar.gz
          export PATH=`pwd`/apache-ant-1.10.9/bin:$PATH
          echo $(ant -version)

      - name: Setup Ortus Workbench
        run: |
          box install "git+https://github.com/Ortus-Solutions/unified-workbench.git" workbench
          printf "\nmodule.name=${{ env.MODULE_ID }}" >> workbench/build.properties
          printf "\ncfengine=${{ matrix.cfengine}}" >> workbench/build.properties
          
      - name: Build Release using WorkBench
        run: |
          ant -DisTravis=false -Dbuild.number=${{ env.GITHUB_RUN_NUMBER }} -Dbuild.branch=${{ env.GITHUB_REF }} -f workbench/build.xml
      
      # - name: Install and Configure CommandBox modules
      #   run: |
      #     box install commandbox-docbox

      # - name: Generate API Docs
      #   run: box run-script build:apidocs

      # - name: Upload API Docs to S3
      #   uses: jakejarvis/s3-sync-action@master
      #   with:
      #     args: --acl public-read
      #   env:
      #     AWS_S3_BUCKET: "apidocs.ortussolutions.com"
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
      #     SOURCE_DIR: ".tmp/apidocs"
      #     DEST_DIR: ""

      # - name: Get Current Version
      #   id: current_version
      #   run: echo "::set-output name=version::`cat $TRAVIS_BUILD_DIR/box.json | jq '.version' -r`"