name: Test Suites

# We are a reusable Workflow only
on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      ELASTICSEARCH_PROTOCOL: http
      ELASTICSEARCH_HOST: 127.0.0.1
      ELASTICSEARCH_PORT: 9200
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        cfengine: [ "lucee@5", "adobe@2021", "adobe@2023", "adobe@2025" ]
        coldboxVersion: [ "^6", "^7"  ]
        javaVersion: [ "17" ]
        ELASTICSEARCH_VERSION: [ "7.17.10", "8.14.1" ]
        experimental: [ false ]
        commandboxVersion: [ "6.2.0-alpha" ]
        include:
          - cfengine: "boxlang@1"
            coldboxVersion: "be"
            javaVersion: "21"
            ELASTICSEARCH_VERSION: "8.14.1"
            experimental: false
            commandboxVersion: "6.2.0-alpha"
          - cfengine: "boxlang@1"
            coldboxVersion: "be"
            javaVersion: "21"
            ELASTICSEARCH_VERSION: "7.17.10"
            experimental: false
            commandboxVersion: "6.2.0-alpha"
          - cfengine: "lucee@6"
            coldboxVersion: "^7"
            javaVersion: "17"
            ELASTICSEARCH_VERSION: "8.14.1"
            experimental: true
            commandboxVersion: "6.2.0-alpha"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "${{ matrix.javaVersion }}"

      - name: Setup CommandBox CLI
        uses: Ortus-Solutions/setup-commandbox@v2.0.1
        with:
          version: "${{ matrix.commandboxVersion }}"

      - name: Reinstall CommandBox-Boxlang Module
        working-directory: ./test-harness
        run: |
          box install --force commandbox-boxlang

      - name: Install Dependencies
        run: |
          box run-script install:dependencies
      
      - name: Set ColdBox Version
        working-directory: ./test-harness
        run: |
          box install --force --noSave coldbox@${{ matrix.coldboxVersion }}

      - name: Scan project file system
        id: scan
        uses: anchore/scan-action@v5
        with:
          path: "./"
          fail-build: true
          severity-cutoff: high
          acs-report-enable: true

      - name: Setup Elasticsearch
        run: |
          docker run -d -p "${{ env.ELASTICSEARCH_PORT }}:9200" --name elasticsearch-server -v $PWD/build/resources/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml elasticsearch:${{ matrix.ELASTICSEARCH_VERSION }}
          rm -rf test-harness/modules_app

      - name: Start ${{ matrix.cfengine }} Server
        env:
          ENVIRONMENT: development
        run: |
          box server start serverConfigFile="server-${{ matrix.cfengine }}.json" --noSaveSettings --debug --trace
          curl http://127.0.0.1:60299

      - name: Run Tests
        env:
          ENVIRONMENT: development
        run: |
          mkdir -p test-harness/tests/results
          box testbox run --verbose outputFile=test-harness/tests/results/test-results outputFormats=json,antjunit
          ls -lR test-harness/tests

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: test-harness/tests/results/**/*.xml
          check_name: "${{ matrix.cfengine }} Test Results"

      - name: Upload Test Results to Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.cfengine }}-${{ matrix.coldboxVersion }}-jdk${{ matrix.javaVersion }}-es${{ matrix.ELASTICSEARCH_VERSION }}
          path: |
            test-harness/tests/results/**/*

      - name: Failure Debugging Log
        if: ${{ failure() || cancelled() }}
        run: |
          box server log serverConfigFile="server-${{ matrix.cfengine }}.json"
          docker container logs elasticsearch-server

      - name: Upload Debugging Log To Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: Failure Debugging Info - ${{ matrix.cfengine }} | Coldbox ${{ matrix.coldboxVersion }} ( jdk${{ matrix.javaVersion }}-es${{ matrix.ELASTICSEARCH_VERSION }} )
          path: |
            .engine/**/logs/*
            .engine/**/WEB-INF/cfusion/logs/*

      - name: Slack Notifications
        # Only on failures and NOT in pull requests
        if: ${{ failure() && !startsWith( 'pull_request', github.event_name ) }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: coding
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: '${{ github.repository }} tests failed :cry:'
          SLACK_TITLE: ${{ github.repository }} Tests For ${{ matrix.cfengine }} failed
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
