<?xml version="1.0"?>
<project name="build" basedir="../" default="build">
	
	<!-- Global Properties -->
	<property name="groupID" 			value="ortussolutions" />

	<!-- Build Labels -->
	<tstamp prefix="start"/>
	<!-- ANT Extensions -->
	<path id="cp">
		<fileset dir="workbench/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<!-- Define Tasks -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="cp" />
	<!-- Import Box-Repo Tasks -->
	<import><url url="https://raw.githubusercontent.com/Ortus-Solutions/box-tasks/master/box-repo.xml"/></import>
	
	<!-- Init -->
	<target name="init" description="Init Build" unless="src.isInit">
		
		<!-- Load Module Properties -->
		<if>
			<available file=".module.properties" />
			<then>
				<!-- Load env properties -->
				<echo>Loading module properties</echo>
				<loadproperties srcFile=".module.properties"/>
			</then>
		</if>

		<!-- Default environment check, if not passed via -Denvironment -->
		<condition property="environment" value="local">
			<not><isset property="environment" /></not>
		</condition>
		<if>
			<available file="workbench/build-${environment}.properties" />
			<then>
				<!-- Load env properties -->
				<echo>Loading properties from environment: ${environment}</echo>
				<loadproperties srcFile="workbench/build-${environment}.properties"/>
			</then>
		</if>
		
		<!-- Load root properties -->
		<echo>Loading base properties</echo>
		<loadproperties srcFile="workbench/build.properties"/>

		<!-- Validation of required variables -->
		<fail unless="project.name">A project name was not specified.  Build could not continue</fail>
		<fail unless="project.version">A project version was not specified.  Build could not continue</fail>
		<fail unless="module.name">A module name was not specified.  Build could not continue</fail>

		<!-- Property defaults -->
		<condition property="cfengine" else="lucee@4.5">
	      <isset property="cfengine"/>
	    </condition>
		<condition property="isTravis" else="false">
	      <isset property="isTravis"/>
	    </condition>
	    <condition property="build.branch" else="development">
	      <isset property="build.branch"/>
	    </condition>

		<!-- Build Number -->
		<if>
			<not><isset property="build.number" /></not>
			<then>
				<propertyfile file="workbench/build.number" comment="Build Number for ANT. Edit not!">
					<entry key="build.number" 
							type="int" 
					     	operation="+"
							pattern="00000"
					     	default="1" />
				</propertyfile>

				<property file="workbench/build.number"/>
			</then>
		</if>

		
		<!-- Build Label -->
		<property name="build.label" value="${project.name}-${project.version}+${build.number}-${start.DSTAMP}${start.TSTAMP}"/>
		<property name="dir.exports" value="${dir.artifacts}/${project.name}/${project.version}" />

		<!-- Cleanup + Init -->
		<delete dir="${dir.build}" />
		<mkdir dir="${dir.build}"/>
		<chmod file="${dir.build}/**" perm="og+wrs" type="both" />
		<!-- Mark as init -->
		<property name="src.isInit" value="true" />
	</target>
	
	<!-- Build Project -->
	<target name="build" depends="init" description="Build the project">
		<!-- Copy build ID -->
		<concat destfile="${dir.build}/${build.label}">Built on ${start.TODAY}</concat>
		
		<!-- Copy module source -->	
      	<copy todir="${dir.build}" encoding="UTF-8">
        	<fileset dir="modules/${module.name}" />
        </copy>

        <!-- Copy readme -->
        <if>
	        <available file="readme.md"/>
	        <then>
		        <copy todir="${dir.build}" encoding="UTF-8" file="readme.md" overwrite="true" />
	        </then>
	    </if>

        <!-- Copy changelog -->
        <if>
	        <available file="changelog.md"/>
	        <then>
	            <copy todir="${dir.build}" encoding="UTF-8" file="changelog.md" overwrite="true" />
	        </then>
	    </if>
        
        <!-- Replace Version + Build Numbers -->
        <!-- Semantic Versioning for Unstable Builds -->
        <echo>Updating placeholders for version ${project.version}, branch ${build.branch}, build ${build.number}</echo>
		
		<replaceregexp match='@build\.version@' replace="${project.version}" flags="ig" byline="true" encoding="UTF-8">
			<fileset dir="${dir.build}" />
		</replaceregexp>

		<!-- Determine snapshot vs master artifact -->
		<if>
			<equals arg1="${build.branch}" arg2="refs/heads/master" />
			<then>
				<replaceregexp match='@build.number@' replace="${build.number}" flags="ig" byline="true" encoding="UTF-8">
				  <fileset dir="${dir.build}" />
				</replaceregexp>
			</then>
			<else>
				<!-- Update to version-snapshot -->
				<replaceregexp match='\+@build.number@' replace="-snapshot" flags="ig" byline="true" encoding="UTF-8">
				  <fileset dir="${dir.build}" />
				</replaceregexp>
			</else>
		</if>
        
        <!-- Zip it -->
		<zip destfile="${dir.exports}/${project.name}-${project.version}.zip" basedir="${dir.build}"></zip>
		
		<!-- Build Checksums -->
		<checksum forceoverwrite="true" fileext=".md5">
			<fileset dir="${dir.exports}">
				<include name="*.zip" />
			</fileset>
		</checksum>
		<checksum forceoverwrite="true" algorithm="SHA-512" fileext=".sha512">
			<fileset dir="${dir.exports}">
				<include name="*.zip" />
			</fileset>
		</checksum>
		
		<!-- Create Box Repo From macrodef -->
		<box-repo location="${dir.exports}" 
				  artifactID="${project.name}" 
				  buildID="${build.number}"
				  groupID="${groupID}"
				  latest="${project.version}"/>
		
		<!-- Copy over box.json to root for convenience -->
		<copy todir="${dir.exports}" file="${dir.build}/box.json" overwrite="true" encoding="UTF-8" />
	</target>

</project>